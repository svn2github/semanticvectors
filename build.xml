<?xml version="1.0"?>
<!DOCTYPE project>

<project name="pitt semantic vectors" default="build-all" basedir=".">

  <property name="version" value="1.23"/>

  <property name="basedir" value="."/>
  <property name="builddir" value="${basedir}/build"/>
  <property name="buildclassesdir" value="${builddir}/classes"/>
  <property name="distdir" value="${basedir}/dist"/>
  <property name="distname" value="semanticvectors-${version}"/>
  <property name="docdir" value="${basedir}/doc"/>  
  <property name="srcdir" value="${basedir}/src"/>
  <property name="testdir" value="${basedir}/test"/>
  <property name="testworkingdir" value="${testdir}/testdata/tmp"/>
  <property name="extdir" value="${basedir}/src-ext"/>

  <target name="init">
    <mkdir dir="${docdir}"/>
    <mkdir dir="${builddir}"/>
    <mkdir dir="${buildclassesdir}"/>
    <mkdir dir="${distdir}"/>
  </target>

  <target name="compile" depends="init">
    <javac srcdir="${srcdir}"
           destdir="${buildclassesdir}"
           debug="on"
           />
  </target>

  <target name="doc" depends="init">
    <javadoc sourcepath="${srcdir}"
             packagenames="pitt.search.semanticvectors,pitt.search.lucene"
             destdir="${docdir}"
             author="true"
             use="true"
             />
  </target>

  <target name="jardist" depends="init">
    <jar destfile="${builddir}/${distname}.jar" 
         basedir="${buildclassesdir}"/>
  </target>

  <target name="tardist" depends="init">
    <tar destfile="${distdir}/${distname}-src.tar">
      <tarfileset dir="${basedir}"
                  prefix="${distname}"
                  preserveLeadingSlashes="true"
                  includes="src/pitt/">
        <include name="build.xml"/>
        <include name="AUTHORS"/>
        <include name="LICENSE"/>
      </tarfileset>
    </tar>
    <gzip zipfile="${distdir}/${distname}-src.tar.gz" 
          src="${distdir}/${distname}-src.tar"/>
  </target>

  <target name="zipdist" depends="init">
    <zip destfile="${distdir}/${distname}-src.zip">
      <zipfileset dir="${basedir}"
                  prefix="${distname}"
                  includes="src/pitt/">
        <include name="build.xml"/>
        <include name="AUTHORS"/>
        <include name="LICENSE"/>
      </zipfileset>
    </zip>
  </target>

  <target name="clean" depends="init">
    <delete dir="${builddir}"/>
    <delete dir="${distdir}"/>
    <!-- Only delete html files from ${docdir} - don't delete
         directories since this is part of svn tree -->
    <delete>    
      <fileset dir="${docdir}">
        <include name="**/*.html"/>
      </fileset>
    </delete>
  </target>

        <!-- Compile and run tests. -->
        <!-- Tests do not currently ship with standard distributions; to
             compile and run tests, check out test dir from the svn repository.
             You will also need to install junit (www.junit.org) -->
  <target name="compile-tests" depends="compile">
    <javac srcdir="${testdir}"
           destdir="${buildclassesdir}"
           debug="on"
           />
  </target>

  <target name="run-tests" depends="compile-tests">
  	<!-- This test configuration includes some quick and dirty filesystem
      	 operations to make sure that the working dir starts and finishes empty. -->
    <delete dir="${testworkingdir}"/>
    <mkdir dir="${testworkingdir}"/>
    <java fork="true" dir="${testworkingdir}"
          classname="pitt.search.semanticvectors.RunTests"/>
    <delete dir="${testworkingdir}"/>
    <mkdir dir="${testworkingdir}"/>  	
  </target>

<!-- Compile development extensions ... this is a temporary solution until
     we have a good way of shipping development extensions without
     introducing dependencies on any more libraries to install. -->
  <target name="compile-ext" depends="compile">
    <javac srcdir="${extdir}"
           destdir="${buildclassesdir}"
           debug="on"
           />
  </target>

<!-- Build all -->
<!-- Does not compile and run tests (see compile-tests target above). -->
   <target name="build-all" 
           depends="compile, doc, jardist, tardist, zipdist"/>

</project>
